name: Full Cycle Tests (k8s)

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  full_cycle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.23.0

      - name: Deploy NGINX Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
          kubectl patch svc ingress-nginx-controller -n ingress-nginx -p '{"spec": {"type": "NodePort"}}'

      - name: Wait for NGINX Ingress Controller to Be Ready
        run: |
          echo "Waiting for NGINX Ingress Controller to be ready..."
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/name=ingress-nginx \
            --timeout=300s          

      - name: Wait for NodePort
        run: |
          echo "Waiting for NodePort..."
          while [ -z "$NODE_PORT" ]; do
            NODE_PORT=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath="{.spec.ports[0].nodePort}")
            [ -z "$NODE_PORT" ] && sleep 10
          done
          NODE_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
          PUBLIC_IP=$(curl -s https://api.ipify.org)
          echo "Node IP: $NODE_IP"
          echo "Public IP: $PUBLIC_IP"
          echo "Node Port: $NODE_PORT"
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "NODE_PORT=$NODE_PORT" >> $GITHUB_ENV 

      - name: Create Receiver Deployment and Service
        run: kubectl apply -f .github/workflows/k8s/full/receiver-deployment.yml

      - name: Wait for Receiver Deployment to Be Ready
        run: |
          echo "Waiting for Receiver Deployment to be ready..."
          kubectl wait --namespace default \
            --for=condition=ready pod \
            --selector=app=receiver \
            --timeout=300s        

      - name: Create Ingress Resource
        env:
          PUBLIC_IP: ${{ env.PUBLIC_IP }}
        run: |
          envsubst < .github/workflows/k8s/full/receiver-ingress.yml | kubectl apply -f -

      - name: Debugging - List all pods and services
        if: always()
        run: |
          kubectl get pods --all-namespaces
          kubectl get svc --all-namespaces
          kubectl get ingress --all-namespaces         
